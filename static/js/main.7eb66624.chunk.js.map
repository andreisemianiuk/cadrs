{"version":3,"sources":["components/Input/SuperInputText.module.css","components/Button/SuperButton.module.scss","components/Checbox/SuperCheckbox.module.css","components/Header/Header.module.scss","components/Login/Login.tsx","components/Register/RegisterPage.tsx","components/RecoveryPassword/RecoveryPassword.tsx","components/Profile/Profile.tsx","components/NewPassword/NewPassword.tsx","components/Button/SuperButton.tsx","components/Checbox/SuperCheckbox.tsx","components/Input/SuperInputText.tsx","components/SuperComponents/SuperComponents.tsx","components/Routes/Routes.tsx","components/Header/Header.tsx","components/App/App.tsx","reportWebVitals.ts","state/reducers/login-reducer.ts","state/reducers/profile-reducer.ts","state/reducers/registry-reducer.ts","state/reducers/recoveryPassword-reducer.ts","state/reducers/newPassword-reducer.ts","state/store.ts","index.tsx"],"names":["module","exports","Login","props","RegisterPage","RecoveryPassword","Profile","NewPassword","SuperButton","red","className","restProps","finalClassName","styles","btn","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","s","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","errorInputError","errorInput","superInput","value","key","SuperComponents","SIGN_IN_PATH","PROFILE_PATH","REGISTER_PATH","NEW_PATH","RECOVERY_PATH","Routes","exact","path","render","to","Header","header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","loginReducer","createSlice","name","initialState","reducers","extraReducers","builder","reducer","profileReducer","registerReducer","recoveryPasswordReducer","newPasswordReducer","rootReducer","combineReducers","login","profile","registerPage","recovery","newPassword","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7eb66624.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__EWcR0\",\"errorInput\":\"SuperInputText_errorInput__3hLXS\",\"error\":\"SuperInputText_error__2Xooz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton_btn__3QN-w\",\"red\":\"SuperButton_red__VVO3D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2BHwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\"};","import React, {FC} from 'react'\r\rexport const Login: FC<PropsType> = (props) => {\r   return (\r      <>\r         <div>Login</div>\r\r      </>\r   )\r}\r\rtype PropsType = {}","import React, {FC} from 'react'\r\rexport const RegisterPage: FC<PropsType> = (props)=>{\r   return(\r      <>\r         <div>RegisterPage</div>\r      </>\r   )\r}\r\rtype PropsType={\r\r}","import React, {FC} from 'react'\r\rexport const RecoveryPassword: FC<PropsType> = (props) => {\r   return (\r      <>\r         <div>RecoveryPassword</div>\r      </>\r   )\r}\r\rtype PropsType = {}","import React, {FC} from 'react'\r\rexport const Profile: FC<PropsType> = (props) => {\r   return (\r      <>\r         Profile Page\r      </>\r   )\r}\r\rtype PropsType = {}","import React, {FC} from 'react'\r\rexport const NewPassword: FC<PropsType> = (props)=>{\r   return(\r      <>\r         <div>NewPassword</div>\r\r      </>\r   )\r}\r\rtype PropsType={\r\r}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport styles from './SuperButton.module.scss'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n   red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n   {\r\n      red, className,\r\n      ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n   }\r\n) => {\r\n\r\n   const finalClassName = ` ${styles.btn} ${red ? styles.red : styles.default} ${className} `\r\n\r\n\r\n   return (\r\n      <button\r\n         className={finalClassName}\r\n         {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n      />\r\n   )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\"\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void //setError\r\n    onEnter?: () => void //showAlert\r\n    error?: string // \"error\"\r\n    spanClassName?: string\r\n    supperInputClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n\r\n    const finalInputClassName = `${s.errorInputError} ${error? s.errorInput : s.superInput} `; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;","import React, {FC} from 'react'\rimport SuperButton from '../Button/SuperButton'\rimport SuperCheckbox from '../Checbox/SuperCheckbox'\rimport SuperInputText from '../Input/SuperInputText'\r\rexport const SuperComponents: FC<PropsType> = (props)=>{\r   return(\r      <>\r         <SuperInputText/>\r         <SuperCheckbox/>\r         <SuperButton red>\r            Button\r         </SuperButton>\r      </>\r   )\r}\r\rtype PropsType={\r\r}","import React from 'react'\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport {Login} from '../Login/Login'\r\nimport {RegisterPage} from '../Register/RegisterPage'\r\nimport {RecoveryPassword} from '../RecoveryPassword/RecoveryPassword'\r\nimport {Profile} from '../Profile/Profile'\r\nimport {NewPassword} from '../NewPassword/NewPassword'\r\nimport {SuperComponents} from '../SuperComponents/SuperComponents'\r\n\r\n\r\n// all project paths\r\nexport const SIGN_IN_PATH = '/login'\r\nexport const PROFILE_PATH = '/profile'\r\nexport const REGISTER_PATH = '/register'\r\nexport const NEW_PATH = '/new-password'\r\nexport const RECOVERY_PATH = '/recovery'\r\nexport const TEST_PATH = '/test'\r\n\r\n\r\nconst Routes: React.FC = () => {\r\n   return (\r\n      <>\r\n         <Route exact path={'/'} render={() => <Redirect to={SIGN_IN_PATH}/>}/>\r\n\r\n         <Route path={SIGN_IN_PATH} render={() => <Login/>}/>\r\n         <Route path={REGISTER_PATH} render={() => <RegisterPage/>}/>\r\n         <Route path={NEW_PATH} render={() => <NewPassword/>}/>\r\n         <Route path={RECOVERY_PATH} render={() => <RecoveryPassword/>}/>\r\n         <Route path={PROFILE_PATH} render={() => <Profile/>}/>\r\n         <Route path={TEST_PATH} render={() => <SuperComponents/>}/>\r\n         <Route path={'/404'} render={() => <div>Error 404: Page not found!</div>}/>\r\n\r\n\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {NEW_PATH, PROFILE_PATH, RECOVERY_PATH, REGISTER_PATH, SIGN_IN_PATH} from '../Routes/Routes'\r\nimport styles from './Header.module.scss'\r\n\r\nexport const Header: React.FC = () => {\r\n\r\n   return (\r\n      <div className={styles.header}>\r\n         <NavLink to={SIGN_IN_PATH}>login</NavLink>\r\n         <NavLink to={REGISTER_PATH}>register</NavLink>\r\n         <NavLink to={RECOVERY_PATH}>recovery</NavLink>\r\n         <NavLink to={NEW_PATH}>newPath</NavLink>\r\n         <NavLink to={PROFILE_PATH}>profile</NavLink>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\nimport Routes from '../Routes/Routes'\nimport {Header} from '../Header/Header'\n\nfunction App() {\n   return (\n      <div>\n         <Header/>\n         <Routes/>\n      </div>\n   )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createSlice} from '@reduxjs/toolkit'\r\r\rconst slice = createSlice({\r   name: 'login',\r   initialState: {},\r   reducers: {},\r   extraReducers: builder => {\r\r   }\r})\r\rexport const loginReducer = slice.reducer","import {createSlice} from '@reduxjs/toolkit'\r\r\rconst slice = createSlice({\r   name: 'profile',\r   initialState: {},\r   reducers: {},\r   extraReducers: builder => {\r\r   }\r})\r\rexport const profileReducer = slice.reducer","import {createSlice} from '@reduxjs/toolkit'\r\r\rconst slice = createSlice({\r   name: 'registry',\r   initialState: {},\r   reducers: {},\r   extraReducers: builder => {\r\r   }\r})\r\rexport const registerReducer = slice.reducer\r","import {createSlice} from '@reduxjs/toolkit'\r\r\rconst slice = createSlice({\r   name: 'recovery',\r   initialState: {},\r   reducers: {},\r   extraReducers: builder => {\r\r   }\r})\r\rexport const recoveryPasswordReducer = slice.reducer","import {createSlice} from '@reduxjs/toolkit'\r\r\rconst slice = createSlice({\r   name: 'registry',\r   initialState: {},\r   reducers: {},\r   extraReducers: builder => {\r\r   }\r})\r\rexport const newPasswordReducer = slice.reducer\r","import thunkMiddleware from \"redux-thunk\"\rimport {combineReducers} from 'redux'\rimport {configureStore} from '@reduxjs/toolkit'\rimport {loginReducer} from './reducers/login-reducer'\rimport {profileReducer} from './reducers/profile-reducer'\rimport {registerReducer} from './reducers/registry-reducer'\rimport {recoveryPasswordReducer} from './reducers/recoveryPassword-reducer'\rimport {newPasswordReducer} from './reducers/newPassword-reducer'\r\r//create state\rconst rootReducer = combineReducers({\r   login: loginReducer,\r   profile: profileReducer,\r   registerPage: registerReducer,\r   recovery: recoveryPasswordReducer,\r   newPassword: newPasswordReducer\r})\r\r//create store\rexport const store = configureStore({\r   reducer: rootReducer,\r   middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r})\r\r//types\rexport type RootReducerType = typeof rootReducer\rexport type AppRootStateType = ReturnType<RootReducerType>\r\r// @ts-ignore\rwindow.store = store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App/App'\nimport reportWebVitals from './reportWebVitals'\nimport {Provider} from 'react-redux'\nimport {store} from './state/store'\nimport {BrowserRouter, HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n   <React.StrictMode>\n      <BrowserRouter>\n         <Provider store={store}>\n            <App/>\n         </Provider>\n      </BrowserRouter>\n   </React.StrictMode>,\n   document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}